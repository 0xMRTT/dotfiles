if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
if [[ -r "${XDG_CONFIG_HOME:-${HOME}/.config}/zi/init.zsh" ]]; then
  source "${XDG_CONFIG_HOME:-${HOME}/.config}/zi/init.zsh" && zzinit
else
  source <(curl -sL https://init.zshell.dev); zzinit
fi

typeset -Ag ZI
ZI[PRIVATE_FUNCTIONS]=".zshrc.d/functions" #<--- Create dir and add path here.
fpath=( "${ZI[PRIVATE_FUNCTIONS]}" "${fpath[@]}" )
autoload -Uz $fpath[1]/*(.:t)

local ZSH_AUTOSUGGEST_USE_ASYNC=true
local ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
local ZSH_AUTOSUGGEST_STRATEGY=(history completion)
local ZSH_COLORIZE_STYLE=colorful
local ZSH_COLORIZE_CHROMA_FORMATTER=terminal256

setopt hist_ignore_all_dups
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_reduce_blanks
setopt hist_find_no_dups
setopt hist_ignore_space
setopt hist_save_no_dups
setopt hist_verify
setopt append_history
setopt extended_history
setopt inc_append_history
setopt share_history
setopt bang_hist
setopt multios
setopt interactive_comments
setopt pushd_ignore_dups
setopt auto_cd
setopt no_beep
setopt auto_list
setopt auto_pushd
setopt pushdminus
setopt promptsubst

snippets=({git,clipboard,history,completion,vcs_info}.zsh)
zi ice has'svn' svn multisrc'$snippets' pick'/dev/null' \
atinit'HISTFILE=${ZSH_CACHE_DIR}/.zsh-history; COMPLETION_WAITING_DOTS=true;'
zi snippet OMZ::lib

zi snippet OMZ::plugins/git/git.plugin.zsh
zi snippet OMZ::plugins/command-not-found/command-not-found.plugin.zsh
zi snippet OMZ::plugins/common-aliases/common-aliases.plugin.zsh
zi snippet OMZ::plugins/yarn/yarn.plugin.zsh
zi snippet OMZ::plugins/fzf/fzf.plugin.zsh
zi snippet OMZ::plugins/sudo/sudo.plugin.zsh

zi light-mode for z-shell/z-a-meta-plugins \
@annexes @ext-git @zsh-users+fast @romkatv \
skip'dircolors-material' @console-tools skip'F-Sy-H' @z-shell

zi-turbo '0a' for \
as"completion" blockf \
https://github.com/docker/cli/blob/master/contrib/completion/zsh/_docker \
as'completion' blockf has'cargo' \
https://github.com/rust-lang/cargo/blob/master/src/etc/_cargo \
as'completion' blockf mv'git-completion.zsh -> _git' \
https://github.com/git/git/blob/master/contrib/completion/git-completion.zsh \
as'completion' blockf \
https://raw.githubusercontent.com/oven-sh/bun/main/completions/bun.zsh \
as'completion' blockf \
zchee/zsh-completions

zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle -e ':completion:*:approximate:*' max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3>7?7:($#PREFIX+$#SUFFIX)/3))numeric)'

zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*:functions' ignored-patterns '(_*|pre(cmd|exec))'
zstyle ':completion:*' use-cache true
zstyle ':completion:*' rehash true
zstyle ':completion:*' menu select
zstyle ":history-search-multi-word" page-size "11"

(( $+commands[vivid] )) && { export LS_COLORS="$(vivid generate molokai)" }

zi-turbo '0b' for \
has'fzf' Aloxaf/fzf-tab \
has'fzf' as'program' from"gh-r" denisidoro/navi \
zplugin/zsh-exa z-shell/zui z-shell/zsh-navigation-tools \
has'fzf' pick'fzf-finder.plugin.zsh' leophys/zsh-plugin-fzf-finder
# atload"zsh-startify" z-shell/zsh-startify

export PATH="$PATH:$HOME/bin"
alias reload!='exec "$SHELL" -l'
alias reload-zsh!='exec zsh -l'
alias c="clear"
#eval "$(zoxide init zsh)"

(( $+commands[exa] )) || { reload-zsh! }
